<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.zwf666.mapper.CourseDescriptionMapper">
    <resultMap id="BaseResultMap" type="top.zwf666.mycreatebean.vod_entity.CourseDescription">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="TINYINT"/>
        <result column="description" property="description" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from course_description
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="top.zwf666.mycreatebean.vod_entity.CourseDescription" useGeneratedKeys="true"
            keyProperty="id">
        insert into course_description (id, course_id, create_time,
                                        update_time, is_deleted, description)
        values (null,
                #{courseId,jdbcType=BIGINT},
                null,
                null,
                0,
                #{description,jdbcType=LONGVARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="top.zwf666.mycreatebean.vod_entity.CourseDescription">
        update course_description
        set course_id   = #{courseId,jdbcType=BIGINT},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            is_deleted  = #{isDeleted,jdbcType=TINYINT},
            description = #{description,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select id, course_id, create_time, update_time, is_deleted, description
        from course_description
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, course_id, create_time, update_time, is_deleted, description
        from course_description
    </select>

    <select id="selectCourseDescriptionByCourseId" resultType="CourseDescription">
        select *
        from course_description
        where course_id = #{id}
    </select>

    <update id="updateCourseDescription">
        update course_description
        set description = #{description}
        where course_id = #{id}
    </update>
</mapper>